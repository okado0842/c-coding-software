-操作方法-
カーソルで選択位置を変更します。
←キーで左に進み
→キーで右に進み
↑キーで上に進み
↓キーで下に進みます

-変数の宣言設定-
エンターキーを押すことでグローバル変数の設定メニューを開けます。
エスケープキーで設定メニューを閉じれます。
一番左の枠でアルファベットを一文字入力すると、
そのアルファベットの変数の設定ができます。
その次の枠では、スペースキーを押すことでその変数の型を選択できます。
その次の一番長い枠ではキーボードから数字を入力することで、
配列数を0~99999999まで選択できます。
配列を扱わない場合はback spaceキーを押して空白にしてください。


-各パネルの使い方-
各パネルを選択してスペースを押すことでそれぞれ用意された動作を行います。
save - 未実装
open - 未実装
build - 現在作成されているデータをもとにソースコードprogram.cを作成します
delete - 編集中のデータをすべて抹消します。

if - if,else,endブロックをコピーします
elseif - elseifブロックをコピーします
for - for,endブロックをコピーします
while - while,endブロックをコピーします
switch - switch,endブロックをコピーします
case - caseブロックをコピーします
break - breakブロックをコピーします
scanf - scanfブロックをコピーします
printf - printfブロックをコピーします

矢印パネルはそれぞれ対応した方向に編集画面を進めます。


-編集画面の使い方-
一番右の編集画面においてvキーを押すとコピーされていたブロックを貼り付けます。
cキーを押すと選択されたブロックをコピーします。ifやwhile等ネストを持つものは
そのネストごとコピーします。
xキーを押すとcキー同様ブロックをコピーしますが、コピーしたあと
その選択されたブロックを除去します。
スペースキーを開くと選択されたブロックの設定を開きます。
また、同様にエスケープキーで設定画面を閉じれます。
各行は関数で扱われる引数を表しています。
forのように3行あるものもありますがそれ以外のものは1行しかありません。
例えばforの場合、一行目は引数1個目の代入式。2行目は引数2個目の条件式。
3行目は引数3個目の代入式。

-代入式の場合-
7個枠がありますが、一番左の枠はキーボードからアルファベットを一文字検出し、変数として扱います。
back spaceキーを押すと枠は空白となり、変数は扱わないことになります。
その隣の長い枠はその変数の配列番号です。
配列を扱わない場合は空白の状態にしてください（back spaceキーで消せます）。
変数を扱わない場合はただの数値として扱われます。
3-4 6-7の枠も同じです。
5番目の枠では3-4,6-7の数をどのように処理し、1-2に代入するかの演算子を選択できます。
+,-,*,/,%の5つの中から選べます。選択されていない場合は+を扱います。

-条件式の場合-
代入式と同じですが枠が2-3番目の間に一つ増えています。
この枠では左の式と右の式を比較する際の比較演算子を選択できます。
==,!=,>,<,>=,<=の中から選べます。選択されていない場合==を用います。

-switchの場合-
switchで扱われる引数は変数のみ選択できます、1つめの枠は変数、2つめの枠は
その配列番号です。

-caseの場合-
数値のみ扱えます。

-printf及びscanfの場合-
変数と配列番号を扱います、
一つ目のyes or noでは改行のはさむかどうかを問うものですが、ユーザーが改行を入力
からできることから未実装のままです。
選択された変数と配列番号を出力します。
printfの場合変数を空白にすることで2つ目の枠に書かれている文字列8文字をそのまま
出力できます。